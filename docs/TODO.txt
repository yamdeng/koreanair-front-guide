#.프로젝트 설명
 -git은 배포되는 도메인에 따라 사용자/관리자 2개로 분류
 -공통 컴포넌트, 공통 유틸은 사용자 git을 기준으로 관리자 git에 수동으로 동기화시킴
  : 관리자쪽은 운영시에 공통 컴포넌트, 공통 유틸이 변경되도 동기화를 하지 않아도 될 것 같음

#.기타 브런치 설명
 -publish : 퍼블리싱 작업 ===> 사용자 git에만 존재함
 -guide : 프론트 개발 방법 및 공통 컴포넌트 가이드 포팅 ===> 사용자 git에만 존재함
 -develop, staging, main, release ===> 항공 정책에 따라 브런치명을 따라감

 


/api/v1/aviation
/api/v1/industry



http://aviation:18080/api/v1
http://localhost:18080/aviation/api/v1
http://localhost:18080/api/v1/aviation

aviation
industry

ApiService(path)
 -VITE_AVIATION_API + '/' + path

AviationApiService(path)
 -VITE_AVIATION_API + '/' + path

IndustryApiService(path)
 -VITE_INDUSTRY_API + '/' + path


1.결정된 사항
 -dev 기본 셋팅은 local 설정 파일은 상대 경로로 셋팅
 -dev:gateway로 설정시에 로컬을 개발환경으로 바라보는 셋팅을 구성




0.기준 url의 마지막은 / 없이 처리

1./api ---> /api/v1
rewrite: (path) => path.replace(/^\/api/, '/api/v1'),

2./api ---> ''
rewrite: (path) => path.replace(/^\/api/, ''),




// 되는 버전
function arrayToTree4(items) {
  const rootItems = [];
  const lookup = {};
  for (const item of items) {
    const { DEPT_ID, PRNT_ID } = item;
    if (!lookup[DEPT_ID]) {
      lookup[DEPT_ID] = { children: [] };
    }
    lookup[DEPT_ID] = { ...item, children: lookup[DEPT_ID].children };
    if (DEPT_ID == '10073') {
      console.log('pass')
      rootItems.push(lookup[DEPT_ID]);
    } else {
      if (!lookup[PRNT_ID]) {
        lookup[PRNT_ID] = { children: [] };
      }
      lookup[PRNT_ID].children.push(lookup[DEPT_ID]);
    }
  }
  return rootItems;
}